apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply from: '../entity_appid.gradle'
apply from: '../region_flavors.gradle'
apply from: '../environment_flavors.gradle'
apply from: '../build_type_flavors.gradle'
apply from: '../get_entity.gradle'
apply from: '../lib_implementations.gradle'

android {
    compileSdkVersion versions.compileSdkVersion
    def versionMajor = 1
    def versionMinor = 0
    def versionPatch = 0

    defaultConfig {
        applicationId "com.rui.kotlinmvvmv2"
        minSdkVersion versions.minSdkVersion
        targetSdkVersion versions.targetSdkVersion

        versionCode versionMajor * 10000 + versionMinor * 100 + versionPatch
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            keyAlias 'chuanyutang'
            keyPassword '123456'
            storeFile file('chuanyutang.jks')
            storePassword '123456'
        }
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            zipAlignEnabled true
            multiDexEnabled true
            shrinkResources true    // 移除无用的resource文件
            resValue "string", "app_name", "KotlinMvvm"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        debug {
            debuggable true
            minifyEnabled false
            zipAlignEnabled true
//            shrinkResources true    // 移除无用的resource文件
            resValue "string", "app_name", "KotlinMvvm"
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            multiDexEnabled true
        }
    }

    flavorDimensions 'region', 'environment', 'type'

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def fileName
            if (outputFileName != null && outputFileName.endsWith('.apk')) {
                // 输出apk名称为kotlinmvvm-release-v1.0.0
                if (variant.buildType.name == 'release') {
                    fileName = "ChuanYuTang-${variant.productFlavors[0].name}-release-v${defaultConfig.versionName}.apk"
                } else if (variant.buildType.name == 'debug') {
                    fileName = "ChuanYuTang-${variant.productFlavors[0].name}-debug-v${defaultConfig.versionName}.apk"
                }
                outputFileName = fileName
            }
        }
    }

    dexOptions {
        jumboMode true
        javaMaxHeapSize "4g"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'

        // Enable Coroutines and Flow APIs
        freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"
        freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.FlowPreview"
    }

    buildFeatures {
        viewBinding true
    }
}

dependencies {
    println("rui name = ${name}")
    println("rui entity = ${getEntityFromLocalProps()}")
    println("rui env = ${getEnvironmentFromLocalProps()}")
    implementation project(':base')
    implementation project(':retrofit2')
    implementation project(':image-loader')
    implementation project(':file-download')

    implementation projectDependencies.multidex
    implementation projectDependencies.appcompat
    implementation projectDependencies.constraintLayout
    implementation projectDependencies.recyclerview
    implementation projectDependencies.supportDesign
    implementation projectDependencies.androidxCoreKtx
    implementation projectDependencies.activityKtx
    implementation projectDependencies.fragmentKtx
    implementation projectDependencies.BaseRecyclerViewAdapterHelper
    implementation projectDependencies.lifeCycleRuntimeKtx
    implementation projectDependencies.livedataKtx

    // Dagger2
    implementation projectDependencies.dagger
    kapt projectDependencies.daggerAnnotationProcessor
    implementation projectDependencies.daggerAndroid
    kapt projectDependencies.daggerAndroidAnnotationProcessor

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}